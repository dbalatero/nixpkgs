#!/usr/bin/env bash

set -e

source "${BASH_SOURCE%/*}/shared.sh"

function source_nix_shell() {
  if [ -e /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh ]; then
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
  fi
}

function install_nix() {
  if ! command_exists nix; then
    curl --proto '=https' --tlsv1.2 -sSf \
      -L https://install.determinate.systems/nix |
      sh -s -- install

    source_nix_shell

    sudo -i nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
    sudo -i nix-channel --update nixpkgs
  else
    echo "Nix already installed, skipping"
  fi
}

function install_home_manager() {
  if ! command_exists "home-manager"; then
    nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
    nix-channel --update

    nix-shell '<home-manager>' -A install
  fi
}

function install_nix_darwin() {
  if ! is_darwin ; then
    return
  fi

  if ! command_exists "darwin-rebuild" ; then
    nix run nix-darwin -- switch --flake ".#$(hostname -s)"
  fi
}

function zsh_binary() {
  echo "$HOME/.nix-profile/bin/zsh"
}

function update_shell_whitelist() {
  local zshbin
  zshbin="$(zsh_binary)"

  if ! cat /etc/shells | grep -q "$zshbin"; then
    echo "Adding $zshbin to /etc/shells, please enter your sudo password"

    echo "$zshbin" | sudo tee -a /etc/shells >/dev/null
  fi
}

function chsh_zsh() {
  if [[ "$SHELL" != "$(zsh_binary)" ]]; then
    local current_user=$USER

    echo "Changing shell for $current_user..."
    sudo chsh -s "$(zsh_binary)" "$current_user"
  fi
}

command_exists curl || (echo "curl is required to run" && exit 1)
command_exists hostname || (echo "hostname is required to run" && exit 1)
source_nix_shell
install_nix
install_home_manager
install_nix_darwin
./bin/switch
update_shell_whitelist
chsh_zsh
